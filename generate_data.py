# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

!pip install faker

import pandas as pd
import numpy as np
from faker import Faker
import random
from datetime import datetime, timedelta
import os

# --- Configuration ---
NUM_NORMAL_TRANSACTIONS = 5000
NUM_ANOMALOUS_TRANSACTIONS = 100
DATA_DIR = 'data'
FILE_PATH = os.path.join(DATA_DIR, 'complex_transactions.csv')

# --- Ensure data directory exists ---
os.makedirs(DATA_DIR, exist_ok=True)

# Initialize Faker
fake = Faker()

# --- Base Data Generation ---
user_profiles = {fake.uuid4(): {'country': fake.country_code(), 'avg_val': np.random.uniform(50, 1000)} for _ in range(1000)}
recipient_profiles = [fake.uuid4() for _ in range(2000)]
data = []

# --- Generate Normal Transactions ---
for _ in range(NUM_NORMAL_TRANSACTIONS):
    sender_id = random.choice(list(user_profiles.keys()))
    profile = user_profiles[sender_id]
    data.append({
        'Timestamp': fake.date_time_between(start_date='-30d', end_date='now'),
        'Amount': abs(round(np.random.normal(loc=profile['avg_val'], scale=profile['avg_val']*0.3), 2)),
        'Currency': 'USD', 'Sender_ID': sender_id, 'Recipient_ID': random.choice(recipient_profiles),
        'Sender_Country_Code': profile['country'], 'Recipient_Country_Code': fake.country_code(),
        'Transaction_Type': random.choice(['Payment', 'Transfer']), 'Device_Type': random.choice(['Mobile', 'Desktop', 'Tablet']),
        'Transactions_Last_24H': random.randint(1, 10), 'Avg_Transaction_Value_Last_30D': round(profile['avg_val'] * np.random.uniform(0.95, 1.05), 2),
        'Is_New_Recipient': random.choice([0, 1]), 'Is_Anomaly': 0
    })

# --- Inject Anomalous Transactions (Fraud Scenarios) ---
for i in range(NUM_ANOMALOUS_TRANSACTIONS):
    sender_id = random.choice(list(user_profiles.keys()))
    profile = user_profiles[sender_id]
    fraud_type = i % 4
    entry = {}
    if fraud_type == 0: # Structuring/Smurfing
        entry = {
            'Timestamp': datetime.now() - timedelta(minutes=random.randint(1, 10)), 'Amount': round(random.uniform(9850.11, 9995.99), 2),
            'Currency': 'USD', 'Sender_ID': sender_id, 'Recipient_ID': random.choice(recipient_profiles),
            'Sender_Country_Code': profile['country'], 'Recipient_Country_Code': 'KY', 'Transaction_Type': 'Transfer', 'Device_Type': 'Desktop',
            'Transactions_Last_24H': 25, 'Avg_Transaction_Value_Last_30D': profile['avg_val'], 'Is_New_Recipient': 1, 'Is_Anomaly': 1
        }
    elif fraud_type == 1: # Unusually High Value
        entry = {
            'Timestamp': fake.date_time_this_month(), 'Amount': round(profile['avg_val'] * random.uniform(20, 50), 2),
            'Currency': 'EUR', 'Sender_ID': sender_id, 'Recipient_ID': random.choice(recipient_profiles),
            'Sender_Country_Code': profile['country'], 'Recipient_Country_Code': fake.country_code(), 'Transaction_Type': 'Payment', 'Device_Type': 'Mobile',
            'Transactions_Last_24H': random.randint(1, 5), 'Avg_Transaction_Value_Last_30D': profile['avg_val'], 'Is_New_Recipient': 1, 'Is_Anomaly': 1
        }
    elif fraud_type == 2: # High Frequency
        entry = {
            'Timestamp': datetime.now() - timedelta(seconds=random.randint(5, 30)), 'Amount': round(np.random.uniform(5.50, 50.25), 2),
            'Currency': 'USD', 'Sender_ID': sender_id, 'Recipient_ID': random.choice(recipient_profiles),
            'Sender_Country_Code': fake.country_code(), 'Recipient_Country_Code': profile['country'], 'Transaction_Type': 'Transfer', 'Device_Type': 'Unknown/API',
            'Transactions_Last_24H': 150, 'Avg_Transaction_Value_Last_30D': profile['avg_val'], 'Is_New_Recipient': 0, 'Is_Anomaly': 1
        }
    else: # Geographical Anomaly
        entry = {
            'Timestamp': fake.date_time_this_month(before_now=True, after_now=False), 'Amount': round(np.random.uniform(500, 2000), 2),
            'Currency': 'GBP', 'Sender_ID': sender_id, 'Recipient_ID': random.choice(recipient_profiles),
            'Sender_Country_Code': 'RU', 'Recipient_Country_Code': 'AE', 'Transaction_Type': 'Payment', 'Device_Type': 'Desktop',
            'Transactions_Last_24H': 2, 'Avg_Transaction_Value_Last_30D': profile['avg_val'], 'Is_New_Recipient': 1, 'Is_Anomaly': 1
        }
    data.append(entry)

df = pd.DataFrame(data).sample(frac=1).reset_index(drop=True)
df.to_csv(FILE_PATH, index=False)
print(f"Generated '{FILE_PATH}' with {len(df)} records.")
